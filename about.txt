assignment_checker/
│
├── app.py                          # Main Flask application logic
├── plagiarism_checker.py          # Plagiarism comparison logic
├── init_db.py                     # (Optional) Script to create & initialize the database
├── plagiarism.db                  # SQLite database file (auto-generated)
│
├── uploads/                       # Folder to store uploaded files temporarily
│   └── (uploaded .txt/.pdf/.docx files)
│
├── assignments/                   # Initial known submissions (baseline texts)
│   └── assignment1.txt
│   └── assignment2.txt
│   └── ... (used to populate database at start)
│
├── templates/                     # HTML templates (rendered by Flask)
│   └── index.html                 # Main frontend interface
│
├── static/                        # Static assets like CSS, images, icons
│   ├── styles.css                 # Optional custom styling
│   └── icons8-favicon-48.png     # Favicon for browser tab
│
└── README.md                      # (Optional) Project description and setup instructions



🧠 Project Title:
Online Assignment Plagiarism Checker Using AI

🎯 Objective:
To develop an AI-based plagiarism detection system that allows students or evaluators to check assignment originality by comparing submitted text or files against an evolving internal database of previously submitted content.

🛠️ Tech Stack:
Component	            Technology Used
Programming Language	    Python
Web Framework	            Flask
Frontend	                HTML5, CSS3, Bootstrap
Database	                SQLite
File Handling	            PyPDF2, python-docx
Plagiarism Logic	        Custom Python logic with NLP techniques
Deployment	                Localhost (can extend to cloud)

📌 Core Features:
1. Dual Input Method:
Users can paste text directly or upload .txt, .pdf, or .docx files.

2. File Extraction and Content Parsing:
Uploaded files are read using appropriate parsers:

txt: Plain read

pdf: PyPDF2

docx: python-docx

3. Plagiarism Detection:
Checks input against:

Initial benchmark assignments

Previously stored original submissions in the database

4. Database Integration:
Stores:

Filename (or “Pasted Text”)

Raw content

Plagiarism result

Timestamp

5. Smart Growth:
Only original submissions are saved to the database.

Over time, the database grows automatically, improving plagiarism detection accuracy.

6. Result Reporting:
Clearly shows:

Match percentage

Source file (if matched)

Or a “No significant match found” message if original

✅ Current Protections:
Blank/invalid submissions are ignored and not stored.

Files are securely uploaded and parsed.

Uploads are restricted to safe extensions.

🚀 Future Scope (Optional Enhancements):
Sentence-level similarity detection using NLP (like spaCy, BERT)

User login system for students and teachers

Admin dashboard to view/download past checks

PDF export of results